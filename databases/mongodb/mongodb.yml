apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo
  namespace: databases # Added namespace
  labels:
    app: mongo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: databases # Added namespace
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      volumes:
      - name: mongo
        persistentVolumeClaim:
          claimName: mongo
      containers:
      - name: mongo
        image: mongo
        ports:
        - containerPort: 27017
        volumeMounts:
        - mountPath: /data/db
          name: mongo
        resources: # Added resource limits and requests
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        livenessProbe: # Added liveness probe
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe: # Added readiness probe
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: databases # Added namespace
  labels:
    app: mongo
spec:
  ports:
  - port: 27017
    targetPort: 27017
    nodePort: 30217
  selector:
    app: mongo
  type: NodePort
